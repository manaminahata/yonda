-- 使用するDB
use yonda;

-- yonda内のテーブルを確認
show tables from yonda;

-- 一時的に外部キー制約の削除
set foreign_key_checks = 0;

-- テーブル削除
DROP table if exists users;
DROP table if exists profile;
DROP table if exists categories;
DROP table if exists books;
DROP table if exists memo;
DROP table if exists like_books;
DROP table if exists deleted_users;
DROP table if exists deleted_books ;

-- 外部キー制約を元に戻す
set foreign_key_checks = 1;

-- usersテーブル（ユーザー情報用）
CREATE table users (
	user_id integer auto_increment not null,
	user_name varchar(50) not null,
	user_email varchar(100) not null unique,
	user_password varchar(16) not null,
	create_at timestamp default current_timestamp,
	update_at timestamp default current_timestamp on UPDATE current_timestamp,
	primary key (user_id)
);

-- profileテーブル（ユーザーのプロフィール画像用）
CREATE table profile (
	profile_id integer auto_increment not null,
	profile_pic text,
	profile_user_id integer not null,
	create_at timestamp default current_timestamp,
	update_at timestamp default current_timestamp on UPDATE current_timestamp,
	primary key (profile_id),
	foreign key (profile_user_id) references users (user_id)
);

-- categoriesテーブル（本のカテゴリー用）
CREATE table categories (
	category_id integer auto_increment not null,
	category_name varchar(20) not null unique,
	create_at timestamp default current_timestamp,
	update_at timestamp default current_timestamp on UPDATE current_timestamp,
	primary key (category_id)
);

-- booksテーブル（書籍情報用）
CREATE table books (
	book_id integer auto_increment not null,
	book_name varchar(100) not null,
	book_category_id integer not null,
	book_price integer,
	book_page integer not null,
	book_current_page integer,
	book_image text,
	book_user_id integer not null,
	create_at timestamp default current_timestamp,
	update_at timestamp default current_timestamp on UPDATE current_timestamp,
	primary key (book_id),
	foreign key (book_category_id) references categories (category_id),
	foreign key (book_user_id) references users (user_id)
);

-- memoテーブル（読書記録・感想用）
CREATE table memo (
	memo_id integer auto_increment not null,
	memo_body varchar(2000),
	memo_book_id integer not null,
	create_at timestamp default current_timestamp,
	update_at timestamp default current_timestamp on UPDATE current_timestamp,
	primary key (memo_id),
	foreign key (memo_book_id) references books (book_id)
);

-- likeテーブル（お気に入りの書籍用）
CREATE table like_books (
	like_id integer auto_increment not null,
	like_book_id integer not null,
	like_user_id integer not null,
	create_at timestamp default current_timestamp,
	update_at timestamp default current_timestamp on UPDATE current_timestamp,
	primary key (like_id),
	foreign key (like_book_id) references books (book_id),
	foreign key (like_user_id) references users (user_id)
);

-- deleted_usersテーブル（削除したユーザー記録）
CREATE table deleted_users (
	deleted_user_id integer auto_increment not null,
	user_id integer not null,
	create_at timestamp default current_timestamp,
	update_at timestamp default current_timestamp on UPDATE current_timestamp,
	primary key (deleted_user_id),
	foreign key (user_id) references users (user_id)
);

-- deleted_booksテーブル（削除した書籍を記録する）
CREATE table deleted_books (
	deleted_book_id integer auto_increment not null,
	book_id integer not null,
	create_at timestamp default current_timestamp,
	update_at timestamp default current_timestamp on UPDATE current_timestamp,
	primary key (deleted_book_id),
	foreign key (book_id) references books (book_id)
);

-- memoテーブル（削除した書籍の感想などを記録する）
CREATE table deleted_memo (
	deleted_memo_id integer auto_increment not null,
	memo_id integer not null,
	create_at timestamp default current_timestamp,
	update_at timestamp default current_timestamp on UPDATE current_timestamp,
	primary key (deleted_memo_id),
	foreign key (memo_id) references memo (memo_id)
);

